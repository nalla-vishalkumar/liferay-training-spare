package training.book.portlet.portlet;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.Portlet;
import javax.portlet.PortletException;
import javax.portlet.PortletPreferences;
import javax.portlet.ReadOnlyException;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;
import javax.portlet.ValidatorException;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet;
import com.liferay.portal.kernel.util.ParamUtil;

import training.book.portlet.constants.TrainingBookPortletKeys;
import training.book.sb.model.Tutor;
import training.book.sb.service.TrainingLocalService;
import training.book.sb.service.TutorLocalService;

/**
 * @author vishalkumar.n
 */
@Component(immediate = true, property = {
        "com.liferay.portlet.display-category=category.training",
        "com.liferay.portlet.instanceable=false",
        "com.liferay.portlet.scopeable=true",
        "javax.portlet.display-name=training-book Portlet",
        "javax.portlet.init-param.template-path=/",
        "javax.portlet.init-param.view-template=/training-book/view.jsp",
        "javax.portlet.name=" + TrainingBookPortletKeys.TrainingBook,
        "javax.portlet.resource-bundle=content.Language",        
        "javax.portlet.security-role-ref=power-user,user",
        "javax.portlet.supports.mime-type=text/html"
}, service = Portlet.class)
public class TrainingBookPortlet extends MVCPortlet {

    @Override
    public void render(RenderRequest renderRequest,
            RenderResponse renderResponse)
            throws IOException, PortletException {

        
    }

    
    
    @Reference(unbind = "-")
    protected void setTutorService(TutorLocalService tutorLocalService) {
        _tutorLocalService = tutorLocalService;
    }

    @Reference(unbind = "-")
    protected void setTrainingService(TrainingLocalService trainingLocalService) {
        _trainingLocalService = trainingLocalService;
    }

    private TutorLocalService _tutorLocalService;
    private TrainingLocalService _trainingLocalService;    

}