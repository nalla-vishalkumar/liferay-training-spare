/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package training.book.sb.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import training.book.sb.model.Training;
import training.book.sb.service.TrainingService;
import training.book.sb.service.persistence.TrainingPersistence;
import training.book.sb.service.persistence.TutorPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the training remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link training.book.sb.service.impl.TrainingServiceImpl}.
 * </p>
 *
 * @author Vishal Kumar Nalla
 * @see training.book.sb.service.impl.TrainingServiceImpl
 * @see training.book.sb.service.TrainingServiceUtil
 * @generated
 */
public abstract class TrainingServiceBaseImpl extends BaseServiceImpl
	implements TrainingService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link training.book.sb.service.TrainingServiceUtil} to access the training remote service.
	 */

	/**
	 * Returns the training local service.
	 *
	 * @return the training local service
	 */
	public training.book.sb.service.TrainingLocalService getTrainingLocalService() {
		return trainingLocalService;
	}

	/**
	 * Sets the training local service.
	 *
	 * @param trainingLocalService the training local service
	 */
	public void setTrainingLocalService(
		training.book.sb.service.TrainingLocalService trainingLocalService) {
		this.trainingLocalService = trainingLocalService;
	}

	/**
	 * Returns the training remote service.
	 *
	 * @return the training remote service
	 */
	public TrainingService getTrainingService() {
		return trainingService;
	}

	/**
	 * Sets the training remote service.
	 *
	 * @param trainingService the training remote service
	 */
	public void setTrainingService(TrainingService trainingService) {
		this.trainingService = trainingService;
	}

	/**
	 * Returns the training persistence.
	 *
	 * @return the training persistence
	 */
	public TrainingPersistence getTrainingPersistence() {
		return trainingPersistence;
	}

	/**
	 * Sets the training persistence.
	 *
	 * @param trainingPersistence the training persistence
	 */
	public void setTrainingPersistence(TrainingPersistence trainingPersistence) {
		this.trainingPersistence = trainingPersistence;
	}

	/**
	 * Returns the tutor local service.
	 *
	 * @return the tutor local service
	 */
	public training.book.sb.service.TutorLocalService getTutorLocalService() {
		return tutorLocalService;
	}

	/**
	 * Sets the tutor local service.
	 *
	 * @param tutorLocalService the tutor local service
	 */
	public void setTutorLocalService(
		training.book.sb.service.TutorLocalService tutorLocalService) {
		this.tutorLocalService = tutorLocalService;
	}

	/**
	 * Returns the tutor remote service.
	 *
	 * @return the tutor remote service
	 */
	public training.book.sb.service.TutorService getTutorService() {
		return tutorService;
	}

	/**
	 * Sets the tutor remote service.
	 *
	 * @param tutorService the tutor remote service
	 */
	public void setTutorService(
		training.book.sb.service.TutorService tutorService) {
		this.tutorService = tutorService;
	}

	/**
	 * Returns the tutor persistence.
	 *
	 * @return the tutor persistence
	 */
	public TutorPersistence getTutorPersistence() {
		return tutorPersistence;
	}

	/**
	 * Sets the tutor persistence.
	 *
	 * @param tutorPersistence the tutor persistence
	 */
	public void setTutorPersistence(TutorPersistence tutorPersistence) {
		this.tutorPersistence = tutorPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return TrainingService.class.getName();
	}

	protected Class<?> getModelClass() {
		return Training.class;
	}

	protected String getModelClassName() {
		return Training.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = trainingPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = training.book.sb.service.TrainingLocalService.class)
	protected training.book.sb.service.TrainingLocalService trainingLocalService;
	@BeanReference(type = TrainingService.class)
	protected TrainingService trainingService;
	@BeanReference(type = TrainingPersistence.class)
	protected TrainingPersistence trainingPersistence;
	@BeanReference(type = training.book.sb.service.TutorLocalService.class)
	protected training.book.sb.service.TutorLocalService tutorLocalService;
	@BeanReference(type = training.book.sb.service.TutorService.class)
	protected training.book.sb.service.TutorService tutorService;
	@BeanReference(type = TutorPersistence.class)
	protected TutorPersistence tutorPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}